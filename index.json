[{"categories":null,"content":"tags: [测试 ] categories: 写作 这篇文章用于测试语雀同步到博客内容是否正常，请忽略。 测试11 H1标题 ","date":"2022-10-31","objectID":"/qgwhdl/:0:0","tags":null,"title":"测试语雀内容→Hexo的文章（请忽略）","uri":"/qgwhdl/"},{"categories":null,"content":"H2标题 文章正文 事项1 事项2 无序列表 有序列表 链接地址 行内代码 状态 折叠内容要被折叠的内容 t = hello world! print (t) :::info 测试 ::: 引用的内容 😄 ","date":"2022-10-31","objectID":"/qgwhdl/:1:0","tags":null,"title":"测试语雀内容→Hexo的文章（请忽略）","uri":"/qgwhdl/"},{"categories":null,"content":"tags: [教程, Hexo] categories: 写作 ","date":"2022-10-29","objectID":"/pg3i82/:0:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"写在前面 **这篇教程能实现什么？**语雀文章更新 → webhook推送 → 触发器触发云函数 → 私有仓库actions拉取文章更新 → 部署到公开仓库 → 托管网站博客自动更新/部署，即语雀端文章更新/发布，博客网站端自动同步。查看我的博客 **为什么选择Hexo博客生成器？**开发者为台湾同胞，文档等中文支持较好；社区、主题资源较为完善。 **为什么选择语雀作为编辑端？**语雀在国产在线文档产品中编辑体验较好，支持Markdown。 **本教程适用人群？**小白、非程序员等人士，专业和资深人员请选择性阅读。 ","date":"2022-10-29","objectID":"/pg3i82/:1:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"搭建Hexo ","date":"2022-10-29","objectID":"/pg3i82/:2:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"安装Node.js/Git 如果你的电脑中已经安装Node.js \u0026 Git，可直接跳到下节安装Hexo 安装Node.js Node.js 为大多数平台提供了官方的 安装程序，可下载安装包进行安装，或者： Windows：通过 nvs（推荐）或者 nvm 安装。 Mac：终端使用 Homebrew 安装。 brew install node 安装Git Windows：下载并安装 git. Mac：终端使用 Homebrew 或者下载 安装程序。 brew install git ","date":"2022-10-29","objectID":"/pg3i82/:2:1","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"安装Hexo 终端执行安装命令： npm install -g hexo-cli 安装以后，可以使用以下两种方式（推荐2）执行 Hexo： npx hexo \u003ccommand\u003e 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo \u003ccommand\u003e，环境变量文件追加内容： echo 'PATH=\"$PATH:./node_modules/.bin\"' \u003e\u003e ~/.profile Windows环境变量配置参考案例 Mac环境变量配置参考案例 ","date":"2022-10-29","objectID":"/pg3i82/:2:2","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"使用Hexo建站 终端依次输入以下命令，为要创建的Hexo站点项目文件夹名称： hexo init \u003cfolder\u003e cd \u003cfolder\u003e npm install 创建完成后，指定文件夹的目录如下： ├── _config.yml ├── package.json ├── scaffolds ├── source ├ ├── _drafts ├ └── _posts └── themes _config.yml（根目录） 网站的配置信息文件，可配置除主题内嵌功能外大部分参数，如网站名称等，参考 Hexo文档｜配置 package.json 应用程序/依赖包信息文件 themes 主题文件夹，Hexo会根据主题来生成静态页面 ","date":"2022-10-29","objectID":"/pg3i82/:2:3","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"更换主题 Hexo自带了landscape主题： 如果不喜欢，可以参考官网案例更换其他主题，比如我选择的Cactus： 操作步骤（以Cactus主题为例）： 在项目根目录下执行： git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus 最后的themes/cactus是指克隆cactus主题到themes文件下。这里有一个坑，在后面部署到GitHub pages时仓库里不能再有仓库，所以克隆完毕后最好删除cactus文件夹里的.git文件夹（已隐藏的文件夹）。 在根目录下的 _config.yml 中设置主题： # theme: landscape theme: cactus 一些主题相关的配置项因主题不同而不同，请查阅相关主题文档 ","date":"2022-10-29","objectID":"/pg3i82/:2:4","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"Hexo命令 至此，你完成了最基础的一个Hexo博客搭建，可以在本地进行配置和调试，参考Hexo文档｜命令 比如执行： hexo g \u0026\u0026 hexo s 即可在本地浏览器地址 localhost:4000 检查是否搭建成功 ","date":"2022-10-29","objectID":"/pg3i82/:2:5","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"语雀文章同步到Hexo ","date":"2022-10-29","objectID":"/pg3i82/:3:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"安装yuque-hexo 项目根目录下命令行安装： npm i -g yuque-hexo package.json文件添加以下内容，其中login，repo，token字段需自己配置： \"yuqueConfig\": { \"postPath\": \"source/_posts\", \"cachePath\": \"yuque.json\", \"mdNameFormat\": \"slug\", \"adapter\": \"hexo\", \"concurrency\": 5, \"baseUrl\": \"https://www.yuque.com/api/v2\", \"login\": \"raydon\", \"repo\": \"tszs\", \"token\": \"在语雀右上角头像-账户设置-Token新建，把全部的读取权限勾上即可\", \"onlyPublished\": true, \"onlyPublic\": true }, \"devDependencies\": { \"yuque-hexo\": \"^1.9.1\" }, \"hexo\": { \"version\": \"6.3.0\" }, 其中的login和repo这样对应： 配置好后，在项目根目录下执行命令，即可拉取语雀对应知识库内容到本地路径/source/_posts： yuque-hexo sync 之后执行： hexo g \u0026\u0026 hexo s 即可在本地浏览器地址 localhost:4000 检查是否成功 语雀图片无法显示的解决 因为语雀图片的防盗链机制，图片会有无法显示的问题，请在 themes/cactus(主题路径)/layout/_partial/head.ejs 中加上一行代码： \u003cmeta name=\"referrer\" content=\"no-referrer\" /\u003e **注意：**此行代码可能会导致使用不蒜子等计数器失效，但目前经我测试还OK；另外其他教程有建议将图片上传到图床解决这个问题，但因一下原因，请按需选择： 免费图床不可靠 收费图床有配置和RMB成本，即使七牛云图床有免费额度，但仍存在Chrome无法加载http图片需要配置SSL证书等问题 ","date":"2022-10-29","objectID":"/pg3i82/:3:1","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"通过github actions自动更新 准备工作 创建一个github公开仓库：用来托管最终生成的静态网站源码，必须以用户名.github.io命名，因为github pages 必须以这种格式才能在浏览器通过域名访问。我的公开仓库 [https://raydon10.github.io](https://raydon10.github.io) 创建一个github私有仓库：用来push托管本地代码，并通过github actions自动（一旦仓库发生变化）部署到上面的公开仓库中，这样以后语雀来源的文章更新就和本地代码没关系了。我的私有仓库 [https://github.com/raydon10/tszs](https://github.com/raydon10/tszs)。注意请删掉主题文件夹内的 .git文件夹，因为有 .git就相当于一个仓库，仓库里不能再放仓库，否则本地代码push不到github私有仓库 github配置 创建一个token（classic） 勾上这几个： 创建完的token要记下来，不然以后就看不到了 再进到刚才准备工作创建的私有仓库，创建两个sercet： GH_REF 内容是公开仓库/博客地址（不需要https://）：raydon10.github.io GH_TOKEN 是上面生成的token（这样做为了防止token在gitHub action代码中暴露） 在本地项目文件夹根目录创建目录文件：.github/workflows/main.yml ，也可以在github私有仓库的Actions选项中创建，但为了本地调试改代码方便，直接在本地文件创建workflows文件，可直接同步到github。 main.yml 填入以下代码： name: Blog CI/CD on: [push, repository_dispatch] jobs: blog-cicd: name: Hexo blog build \u0026 deploy runs-on: ubuntu-latest env: TZ: Asia/Shanghai steps: - name: Checkout codes uses: actions/checkout@v2 - name: Setup node uses: actions/setup-node@v1 with: node-version: '12.x' - name: Cache node modules uses: actions/cache@v1 with: path: ~/.npm key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} - name: Install dependencies run: | npm install hexo-cli -g npm install yuque-hexo -g npm install yuque-hexo sync - name: Generate files run: hexo generate - name: Deploy blog run: | git clone \"https://${{ secrets.GH_REF }}\" deploy_git mv ./deploy_git/.git ./public cd ./public git config user.name \"填入自己的github用户名\" git config user.email \"填入自己的github邮箱\" git add . git commit -m \"GitHub Actions Auto Builder at $(date +'%Y-%m-%d %H:%M:%S')\" git push --force --quiet \"https://${{ secrets.GH_TOKEN }}@${{ secrets.GH_REF }}\" main:main 通过上面的代码，当仓库发生变化或 repository_dispatch 时会自动触发更新部署到公开仓库（即博客网站） serverless云函数配置 进入 腾讯云控制台 搜索 云函数，点击新建： 代码内容填写： # -*- coding: utf8 -*- import requests def main_handler(event, context): r = requests.post(\"https://api.github.com/repos/raydon10/tszs/dispatches\", json = {\"event_type\": \"run-it\"}, headers = {\"User-Agent\":'curl/7.52.1', 'Content-Type': 'application/json', 'Accept': 'application/vnd.github.everest-preview+json', 'Authorization': 'token 这里是上面创建的github_token'}) if r.status_code == 204: return \"This's OK!\" else: return r.status_code 注意用你自己的私有仓库替代上述代码中的仓库地址，‘Authorization’: ’token 的token不要删掉。 点击测试，看到“That’s OK!”就是成功了；同时在github私有仓库的Actions选项卡下可以看到对应动作，等待动作从黄色变成绿色则说明配置成功了，否则点进去详情看下具体原因具体解决～ 在刚才的函数服务下创建一个触发器（用于接受语雀更新的webhook）： 选择这个然后提交： 然后找到刚创建的触发器的访问路径： **注意：**腾讯云函数服务可能有一定费用（不高），使用过程需留意。 语雀webhook配置 在作为博客写作端的语雀知识库（没有则新建一个），点击设置： webhook地址填上面的触发器访问地址。 至此，一个语雀文章更新 → webhook推送 → 触发器触发云函数 → 私有仓库actions拉取文章更新 → 部署到公开仓库的自动化过程就完成了！自己验证试试吧！ ","date":"2022-10-29","objectID":"/pg3i82/:3:2","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"使用自己的域名 通过上面的一通操作，可以在自己的github pages页面查看自动化部署的Hexo个人博客网站，域名如 https:// raydon10.github.io，如果想使用自己的域名，可以参考以下内容： ","date":"2022-10-29","objectID":"/pg3i82/:4:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"腾讯云Web应用托管 进入腾讯云控制台，搜索找到 Web应用托管 新建应用，选择从github仓库，导入我们之前创建的公开仓库（github pages），这样一旦仓库有更新，就会触发Web应用托管自动同步更新内容并构建和部署网站： **注意：**腾讯云Web应用托管服务有一定费用（但不高），使用中请留意。 腾讯云域名中有.git片段会导致无法自动构建，经过我和腾讯云的沟通他们已经修复这个BUG： 至此我们能通过腾讯云分配给我们的域名进行访问，要使用自己的域名可以进行绑定（需要备案）： ","date":"2022-10-29","objectID":"/pg3i82/:4:1","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"其他私有域名方案 请自行查阅～ ","date":"2022-10-29","objectID":"/pg3i82/:4:2","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"Hexo/Cactus主题的技巧和坑 ","date":"2022-10-29","objectID":"/pg3i82/:5:0","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"Hexo 添加 .gitignore文件 将一些不需要的文件添加到本地项目根目录下的 .gitignore文件（新建/纯文本），如果按上面教程进行的博客搭建，可添加以下内容： .DS_Store .deploy_git/ public/ source/_posts/ lastGeneratePath.log db.json yuque.json 这样git push时会忽略这些文件或文件夹，.DS_Store只有Mac系统需添加，其余文件会在github actions执行时重新构建，无需push。 添加 lastGeneratePath.log 文件 在本地项目根目录添加 lastGeneratePath.log 文件，并在 package.json 的 “yuqueConfig” 中写入 \"lastGeneratePath\": \"lastGeneratePath.log\"，这样每次执行yuque-hexo sync同步语雀内容时，只会获取上次更新时间戳之后发生变化的内容。 ","date":"2022-10-29","objectID":"/pg3i82/:5:1","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"},{"categories":null,"content":"Cactus 菜单在Chrome中消失的BUG 在Chromium内核的PC浏览器中，文章正文页如超出屏幕高度，拖动浏览页面菜单消失，回到顶部后不再出现，并且点击菜单按钮也不会出现。解决办法： 将 /themes/cactus/source/js/main.js 文件中 /** * Add a scroll listener to the menu to hide/show the navigation links. */ if (menu.length) { $(window).on(\"scroll\", function() { var topDistance = menu.offset().top; 部分的var topDistance = menu.offset().top替换为var topDistance = window.pageYOffset即可解决。 增加不蒜子统计 效果如图： 在 /themes/cactus/layout/_partial/footer.ejs 文件末尾增加不蒜子代码： \u003cfooter id=\"footer\"\u003e \u003cdiv class=\"footer-left\"\u003e \u003c%= __('footer.copyright') %\u003e \u0026copy; \u003c% var endYear = (theme.copyright \u0026\u0026 theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %\u003e \u003c% var startYear = (theme.copyright \u0026\u0026 theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %\u003e \u003c%= startYear \u003e= endYear ? endYear : startYear + \"-\" + endYear %\u003e \u003c%= config.author || config.title %\u003e 转载请注明出处 \u003c/div\u003e \u003cdiv class=\"footer-right\"\u003e \u003cnav\u003e \u003cul\u003e \u003c% for (var i in theme.nav) { %\u003e\u003c!-- --\u003e\u003cli\u003e\u003ca href=\"\u003c%- url_for(theme.nav[i]) %\u003e\"\u003e\u003c%= __('nav.'+i).replace(\"nav.\", \"\") %\u003e\u003c/a\u003e\u003c/li\u003e\u003c!-- --\u003e\u003c% } %\u003e \u003c/ul\u003e \u003c/nav\u003e \u003c/div\u003e \u003cdiv class=\"busuanzi\"\u003e \u003c% if (theme.busuanzi \u0026\u0026 theme.busuanzi.enable){ %\u003e \u003c!-- 不蒜子统计 --\u003e \u003cspan id=\"busuanzi_container_site_pv\"\u003e 网站总访问量：\u003cspan id=\"busuanzi_value_site_pv\"\u003e\u003c/span\u003e \u003c/span\u003e \u003c!-- \u003cspan class=\"post-meta-divider\"\u003e|\u003c/span\u003e \u003cspan id=\"busuanzi_container_site_uv\" style='display:none'\u003e 本站访客数\u003cspan id=\"busuanzi_value_site_uv\"\u003e\u003c/span\u003e人 \u003c/span\u003e --\u003e \u003cscript async src=\"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\"\u003e\u003c/script\u003e \u003c% } %\u003e \u003c/div\u003e \u003c/footer\u003e 同时在 /themes/cactus/source/css/_partial/footer.styl 文件增加 .busuanzi及以后内容： @media (min-width: 39rem) #footer display: flex flex-flow: row wrap justify-content: space-between align-items: center align-content: center margin-bottom: 20px .footer-left align-self: flex-start margin-right: 20px .footer-right align-self: flex-end .busuanzi display: inline-block width: 100% text-align: left 在 /themes/cactus/_config.yml 追加以下内容： # 是否开启访问量统计功能(不蒜子) busuanzi: enable: true ","date":"2022-10-29","objectID":"/pg3i82/:5:2","tags":null,"title":"小白搭建Hexo博客(语雀端写作)详细教程","uri":"/pg3i82/"}]