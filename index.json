[{"content":"写在前面 **这篇教程能实现什么？**语雀文章更新 → webhook推送 → 触发器触发云函数 → 私有仓库actions拉取文章更新 → 部署到公开仓库 → 托管网站博客自动更新/部署，即语雀端文章更新/发布，博客网站端自动同步。查看我的博客\n**为什么选择Hexo博客生成器？**开发者为台湾同胞，文档等中文支持较好；社区、主题资源较为完善。\n**为什么选择语雀作为编辑端？**语雀在国产在线文档产品中编辑体验较好，支持Markdown。\n**本教程适用人群？**小白、非程序员等人士，专业和资深人员请选择性阅读。\n搭建Hexo 安装Node.js/Git 如果你的电脑中已经安装Node.js \u0026amp; Git，可直接跳到下节安装Hexo\n安装Node.js Node.js 为大多数平台提供了官方的 安装程序，可下载安装包进行安装，或者：\n Windows：通过 nvs（推荐）或者 nvm 安装。 Mac：终端使用 Homebrew 安装。  1  brew install node   安装Git  Windows：下载并安装 git. Mac：终端使用 Homebrew 或者下载 安装程序。  1  brew install git   安装Hexo 终端执行安装命令：\n1  npm install -g hexo-cli   安装以后，可以使用以下两种方式（推荐2）执行 Hexo：\n npx hexo \u0026lt;command\u0026gt; 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo \u0026lt;command\u0026gt;，环境变量文件追加内容：  1  echo \u0026#39;PATH=\u0026#34;$PATH:./node_modules/.bin\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.profile    Windows环境变量配置参考案例 Mac环境变量配置参考案例  使用Hexo建站 终端依次输入以下命令，为要创建的Hexo站点项目文件夹名称：\n1 2 3  hexo init \u0026lt;folder\u0026gt; cd \u0026lt;folder\u0026gt; npm install   创建完成后，指定文件夹的目录如下：\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n├ ├── _drafts\n├ └── _posts\n└── themes\n_config.yml（根目录）\n网站的配置信息文件，可配置除主题内嵌功能外大部分参数，如网站名称等，参考 Hexo文档｜配置\npackage.json\n应用程序/依赖包信息文件\nthemes\n主题文件夹，Hexo会根据主题来生成静态页面\n更换主题 Hexo自带了landscape主题：\n如果不喜欢，可以参考官网案例更换其他主题，比如我选择的Cactus：\n操作步骤（以Cactus主题为例）：\n 在项目根目录下执行：  1  git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus   最后的themes/cactus是指克隆cactus主题到themes文件下。这里有一个坑，在后面部署到GitHub pages时仓库里不能再有仓库，所以克隆完毕后最好删除cactus文件夹里的.git文件夹（已隐藏的文件夹）。\n在根目录下的 _config.yml 中设置主题：  1 2  # theme: landscape theme: cactus   一些主题相关的配置项因主题不同而不同，请查阅相关主题文档  Hexo命令 至此，你完成了最基础的一个Hexo博客搭建，可以在本地进行配置和调试，参考Hexo文档｜命令\n比如执行：\n1  hexo g \u0026amp;\u0026amp; hexo s   即可在本地浏览器地址 localhost:4000 检查是否搭建成功\n语雀文章同步到Hexo 安装yuque-hexo 项目根目录下命令行安装：\n1  npm i -g yuque-hexo   package.json文件添加以下内容，其中login，repo，token字段需自己配置：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  \u0026#34;yuqueConfig\u0026#34;: { \u0026#34;postPath\u0026#34;: \u0026#34;source/_posts\u0026#34;, \u0026#34;cachePath\u0026#34;: \u0026#34;yuque.json\u0026#34;, \u0026#34;mdNameFormat\u0026#34;: \u0026#34;slug\u0026#34;, \u0026#34;adapter\u0026#34;: \u0026#34;hexo\u0026#34;, \u0026#34;concurrency\u0026#34;: 5, \u0026#34;baseUrl\u0026#34;: \u0026#34;https://www.yuque.com/api/v2\u0026#34;, \u0026#34;login\u0026#34;: \u0026#34;raydon\u0026#34;, \u0026#34;repo\u0026#34;: \u0026#34;tszs\u0026#34;, \u0026#34;token\u0026#34;: \u0026#34;在语雀右上角头像-账户设置-Token新建，把全部的读取权限勾上即可\u0026#34;, \u0026#34;onlyPublished\u0026#34;: true, \u0026#34;onlyPublic\u0026#34;: true }, \u0026#34;devDependencies\u0026#34;: { \u0026#34;yuque-hexo\u0026#34;: \u0026#34;^1.9.1\u0026#34; }, \u0026#34;hexo\u0026#34;: { \u0026#34;version\u0026#34;: \u0026#34;6.3.0\u0026#34; },   其中的login和repo这样对应：\n配置好后，在项目根目录下执行命令，即可拉取语雀对应知识库内容到本地路径/source/_posts：\n1  yuque-hexo sync   之后执行：\n1  hexo g \u0026amp;\u0026amp; hexo s   即可在本地浏览器地址 localhost:4000 检查是否成功\n语雀图片无法显示的解决 因为语雀图片的防盗链机制，图片会有无法显示的问题，请在 themes/cactus(主题路径)/layout/_partial/head.ejs 中加上一行代码：\n1  \u0026lt;meta name=\u0026#34;referrer\u0026#34; content=\u0026#34;no-referrer\u0026#34; /\u0026gt;   **注意：**此行代码可能会导致使用不蒜子等计数器失效，但目前经我测试还OK；另外其他教程有建议将图片上传到图床解决这个问题，但因一下原因，请按需选择：\n 免费图床不可靠 收费图床有配置和RMB成本，即使七牛云图床有免费额度，但仍存在Chrome无法加载http图片需要配置SSL证书等问题  通过github actions自动更新 准备工作  创建一个github公开仓库：用来托管最终生成的静态网站源码，必须以用户名.github.io命名，因为github pages 必须以这种格式才能在浏览器通过域名访问。我的公开仓库 [https://raydon10.github.io](https://raydon10.github.io) 创建一个github私有仓库：用来push托管本地代码，并通过github actions自动（一旦仓库发生变化）部署到上面的公开仓库中，这样以后语雀来源的文章更新就和本地代码没关系了。我的私有仓库 [https://github.com/raydon10/tszs](https://github.com/raydon10/tszs)。注意请删掉主题文件夹内的 .git文件夹，因为有 .git就相当于一个仓库，仓库里不能再放仓库，否则本地代码push不到github私有仓库  github配置 创建一个token（classic）\n勾上这几个：\n创建完的token要记下来，不然以后就看不到了\n再进到刚才准备工作创建的私有仓库，创建两个sercet：\nGH_REF 内容是公开仓库/博客地址（不需要https://）：raydon10.github.io\nGH_TOKEN 是上面生成的token（这样做为了防止token在gitHub action代码中暴露）\n在本地项目文件夹根目录创建目录文件：.github/workflows/main.yml ，也可以在github私有仓库的Actions选项中创建，但为了本地调试改代码方便，直接在本地文件创建workflows文件，可直接同步到github。\nmain.yml 填入以下代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  name:Blog CI/CDon:[push, repository_dispatch]jobs:blog-cicd:name:Hexo blog build \u0026amp; deployruns-on:ubuntu-latestenv:TZ:Asia/Shanghaisteps:- name:Checkout codesuses:actions/checkout@v2- name:Setup nodeuses:actions/setup-node@v1with:node-version:\u0026#39;12.x\u0026#39;- name:Cache node modulesuses:actions/cache@v1with:path:~/.npmkey:${{ runner.os }}-node-${{ hashFiles(\u0026#39;**/package-lock.json\u0026#39;) }}- name:Install dependenciesrun:|npm install hexo-cli -g npm install yuque-hexo -g npm install yuque-hexo sync - name:Generate filesrun:hexo generate- name:Deploy blogrun:|git clone \u0026#34;https://${{ secrets.GH_REF }}\u0026#34; deploy_git mv ./deploy_git/.git ./public cd ./public git config user.name \u0026#34;填入自己的github用户名\u0026#34; git config user.email \u0026#34;填入自己的github邮箱\u0026#34; git add . git commit -m \u0026#34;GitHub Actions Auto Builder at $(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; git push --force --quiet \u0026#34;https://${{ secrets.GH_TOKEN }}@${{ secrets.GH_REF }}\u0026#34; main:main   通过上面的代码，当仓库发生变化或 repository_dispatch 时会自动触发更新部署到公开仓库（即博客网站）\nserverless云函数配置 进入 腾讯云控制台 搜索 云函数，点击新建：\n代码内容填写：\n1 2 3 4 5 6 7 8 9 10 11 12 13  # -*- coding: utf8 -*- import requests def main_handler(event, context): r = requests.post(\u0026#34;https://api.github.com/repos/raydon10/tszs/dispatches\u0026#34;, json = {\u0026#34;event_type\u0026#34;: \u0026#34;run-it\u0026#34;}, headers = {\u0026#34;User-Agent\u0026#34;:\u0026#39;curl/7.52.1\u0026#39;, \u0026#39;Content-Type\u0026#39;: \u0026#39;application/json\u0026#39;, \u0026#39;Accept\u0026#39;: \u0026#39;application/vnd.github.everest-preview+json\u0026#39;, \u0026#39;Authorization\u0026#39;: \u0026#39;token 这里是上面创建的github_token\u0026#39;}) if r.status_code == 204: return \u0026#34;This\u0026#39;s OK!\u0026#34; else: return r.status_code   注意用你自己的私有仓库替代上述代码中的仓库地址，\u0026lsquo;Authorization\u0026rsquo;: \u0026rsquo;token 的token不要删掉。\n点击测试，看到“That\u0026rsquo;s OK!”就是成功了；同时在github私有仓库的Actions选项卡下可以看到对应动作，等待动作从黄色变成绿色则说明配置成功了，否则点进去详情看下具体原因具体解决～\n在刚才的函数服务下创建一个触发器（用于接受语雀更新的webhook）：\n选择这个然后提交：\n然后找到刚创建的触发器的访问路径：\n**注意：**腾讯云函数服务可能有一定费用（不高），使用过程需留意。\n语雀webhook配置 在作为博客写作端的语雀知识库（没有则新建一个），点击设置：\nwebhook地址填上面的触发器访问地址。\n至此，一个语雀文章更新 → webhook推送 → 触发器触发云函数 → 私有仓库actions拉取文章更新 → 部署到公开仓库的自动化过程就完成了！自己验证试试吧！\n使用自己的域名 通过上面的一通操作，可以在自己的github pages页面查看自动化部署的Hexo个人博客网站，域名如 https:// raydon10.github.io，如果想使用自己的域名，可以参考以下内容：\n腾讯云Web应用托管 进入腾讯云控制台，搜索找到 Web应用托管 新建应用，选择从github仓库，导入我们之前创建的公开仓库（github pages），这样一旦仓库有更新，就会触发Web应用托管自动同步更新内容并构建和部署网站：\n**注意：**腾讯云Web应用托管服务有一定费用（但不高），使用中请留意。\n腾讯云域名中有.git片段会导致无法自动构建，经过我和腾讯云的沟通他们已经修复这个BUG：\n至此我们能通过腾讯云分配给我们的域名进行访问，要使用自己的域名可以进行绑定（需要备案）：\n其他私有域名方案 请自行查阅～\nHexo/Cactus主题的技巧和坑 Hexo 添加 .gitignore文件 将一些不需要的文件添加到本地项目根目录下的 .gitignore文件（新建/纯文本），如果按上面教程进行的博客搭建，可添加以下内容：\n1 2 3 4 5 6 7  .DS_Store .deploy_git/ public/ source/_posts/ lastGeneratePath.log db.json yuque.json   这样git push时会忽略这些文件或文件夹，.DS_Store只有Mac系统需添加，其余文件会在github actions执行时重新构建，无需push。\n添加 lastGeneratePath.log 文件 在本地项目根目录添加 lastGeneratePath.log 文件，并在 package.json 的 \u0026ldquo;yuqueConfig\u0026rdquo; 中写入 \u0026quot;lastGeneratePath\u0026quot;: \u0026quot;lastGeneratePath.log\u0026quot;，这样每次执行yuque-hexo sync同步语雀内容时，只会获取上次更新时间戳之后发生变化的内容。\nCactus 菜单在Chrome中消失的BUG 在Chromium内核的PC浏览器中，文章正文页如超出屏幕高度，拖动浏览页面菜单消失，回到顶部后不再出现，并且点击菜单按钮也不会出现。解决办法：\n将 /themes/cactus/source/js/main.js 文件中\n1 2 3 4 5 6  /** * Add a scroll listener to the menu to hide/show the navigation links. */ if (menu.length) { $(window).on(\u0026#34;scroll\u0026#34;, function() { var topDistance = menu.offset().top;   部分的var topDistance = menu.offset().top替换为var topDistance = window.pageYOffset即可解决。\n增加不蒜子统计 效果如图：\n在 /themes/cactus/layout/_partial/footer.ejs 文件末尾增加不蒜子代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  \u0026lt;footer id=\u0026#34;footer\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;footer-left\u0026#34;\u0026gt; \u0026lt;%= __(\u0026#39;footer.copyright\u0026#39;) %\u0026gt; \u0026amp;copy; \u0026lt;% var endYear = (theme.copyright \u0026amp;\u0026amp; theme.copyright.end_year) ? theme.copyright.end_year : new Date().getFullYear() %\u0026gt; \u0026lt;% var startYear = (theme.copyright \u0026amp;\u0026amp; theme.copyright.start_year) ? theme.copyright.start_year : new Date().getFullYear() %\u0026gt; \u0026lt;%= startYear \u0026gt;= endYear ? endYear : startYear + \u0026#34;-\u0026#34; + endYear %\u0026gt; \u0026lt;%= config.author || config.title %\u0026gt; 转载请注明出处 \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;footer-right\u0026#34;\u0026gt; \u0026lt;nav\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;% for (var i in theme.nav) { %\u0026gt;\u0026lt;!-- --\u0026gt;\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026lt;%- url_for(theme.nav[i]) %\u0026gt;\u0026#34;\u0026gt;\u0026lt;%= __(\u0026#39;nav.\u0026#39;+i).replace(\u0026#34;nav.\u0026#34;, \u0026#34;\u0026#34;) %\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\u0026lt;!-- --\u0026gt;\u0026lt;% } %\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/nav\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;busuanzi\u0026#34;\u0026gt; \u0026lt;% if (theme.busuanzi \u0026amp;\u0026amp; theme.busuanzi.enable){ %\u0026gt; \u0026lt;!-- 不蒜子统计 --\u0026gt; \u0026lt;span id=\u0026#34;busuanzi_container_site_pv\u0026#34;\u0026gt; 网站总访问量：\u0026lt;span id=\u0026#34;busuanzi_value_site_pv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;!-- \u0026lt;span class=\u0026#34;post-meta-divider\u0026#34;\u0026gt;|\u0026lt;/span\u0026gt; \u0026lt;span id=\u0026#34;busuanzi_container_site_uv\u0026#34; style=\u0026#39;display:none\u0026#39;\u0026gt; 本站访客数\u0026lt;span id=\u0026#34;busuanzi_value_site_uv\u0026#34;\u0026gt;\u0026lt;/span\u0026gt;人 \u0026lt;/span\u0026gt; --\u0026gt; \u0026lt;script async src=\u0026#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;% } %\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/footer\u0026gt;   同时在 /themes/cactus/source/css/_partial/footer.styl 文件增加 .busuanzi及以后内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  @media (min-width: 39rem) #footer display: flex flex-flow: row wrap justify-content: space-between align-items: center align-content: center margin-bottom: 20px .footer-left align-self: flex-start margin-right: 20px .footer-right align-self: flex-end .busuanzi display: inline-block width: 100% text-align: left   在 /themes/cactus/_config.yml 追加以下内容：\n1 2 3  # 是否开启访问量统计功能(不蒜子)busuanzi:enable:true  ","permalink":"https://tszs.info/posts/blog/pg3i82/","summary":"写在前面 **这篇教程能实现什么？**语雀文章更新 → webhook推送 → 触发器触发云函数 → 私有仓库actions拉取文章更新 → 部署到公开仓库 →","title":"小白搭建Hexo博客(语雀端写作)详细教程"},{"content":"这篇文章用于测试语雀同步到博客内容是否正常，请忽略。\n测试11\nH1标题 H2标题 文章正文\n 事项1 事项2 无序列表   有序列表  链接地址\n行内代码\n                状态\n折叠内容要被折叠的内容\n1 2  t = hello world! print (t)   :::info 测试 :::\n 引用的内容\n 😄\n","permalink":"https://tszs.info/posts/blog/qgwhdl/","summary":"这篇文章用于测试语雀同步到博客内容是否正常，请忽略。 测试11 H1标题 H2标题 文章正文 事项1 事项2 无序列表 有序列表 链接地址 行内代码 状态 折叠内容","title":"测试语雀内容→Hexo的文章（请忽略）"}]